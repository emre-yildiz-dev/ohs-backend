services:
  postgres:
    image: postgres:17.5-bookworm
    container_name: ohs_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ohs_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d ohs_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ohs_network

  redis:
    image: redis:8.0.0-bookworm
    container_name: ohs_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ohs_network

  coturn:
    image: coturn/coturn:latest
    container_name: ohs_coturn
    restart: unless-stopped
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf:ro
      - coturn-data:/var/tmp
    # Expose UDP and TCP ports for TURN/STUN
    ports:
      - "3478:3478/tcp"
      - "3478:3478/udp"
      - "49152-49200:49152-49200/udp"
    command: -c /etc/coturn/turnserver.conf -v
    environment:
      - TURN_USERNAME=turnuser
      - TURN_PASSWORD=turnpassword
    networks:
      - ohs_network

  ohs-backend:
    build:
      context: ./ # Assuming your Axum app Dockerfile is here
      dockerfile: Dockerfile
    container_name: ohs_backend
    restart: unless-stopped
    ports:
      - "8000:8000" # Assuming your Axum app runs on port 8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Add any environment variables your Axum app needs
      DATABASE_URL: postgresql://user:password@postgres:5432/ohs_db
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://garage:3900
      S3_ACCESS_KEY_ID: garage-access-key
      S3_SECRET_ACCESS_KEY: garage-secret-key
      S3_BUCKET_NAME: ohs-bucket
      TURN_URL_UDP: turn:coturn:3478?transport=udp
      TURN_URL_TCP: turn:coturn:3478?transport=tcp
      TURN_USERNAME: turnuser
      TURN_PASSWORD: turnpassword
    networks:
      - ohs_network

  garage:
    image: dxflrs/arm64_garage:a2a9e3cec4945c4f6bb93622b860ef696ed3c075
    container_name: garage
    ports:
      - "3900:3900"  # RPC
      - "3901:3901"  # S3 API
    volumes:
      - garage-data:/var/lib/garage
      - ./garage-config/garage.toml:/etc/garage.toml
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    networks:
      - ohs_network

volumes:
  postgres-data:
  redis-data:
  garage-data:
  coturn-data:

networks:
  ohs_network:
    driver: bridge
